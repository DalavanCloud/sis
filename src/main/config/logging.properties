##################################################################################
#                                                                                #
#                    Logging configuration file for debugging                    #
#                                                                                #
#  This configuration file uses a finer logging level than the default setting   #
#  defined by "$JAVA_HOME/jre/lib/logging.properties" file. This configuration   #
#  can be enabled by adding the following argument when launching Java (replace  #
#  "$SIS_SOURCE" by the root directory of Apache SIS project and "/" by the      #
#  platform-specific path separator).                                            #
#                                                                                #
# -Djava.util.logging.config.file=$SIS_SOURCE/src/main/config/logging.properties #
#                                                                                #
##################################################################################

# Handlers installed during VM startup.
# These classes must be on the system classpath.
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
.level = CONFIG

# Enable debugging information for Apache SIS packages.
org.apache.sis.level = FINE

# Set the message that are printed on the console to FINE and above.
# FINE provides debugging information normally hidden in production.
java.util.logging.ConsoleHandler.level = FINE

# MonolineFormatter is optional and specific to Apache SIS. Its default configuration
# does not show source class and method names. We use this configuration because more
# complete information are saved in the "workspace/java.log" file. Uncomment the next
# line if class and method names are desired. See MonolineFormatter class javadoc for
# more information about configuration options.
java.util.logging.ConsoleHandler.formatter = org.apache.sis.util.logging.MonolineFormatter
#org.apache.sis.util.logging.MonolineFormatter.source = class.method

# Copy the logs in a file in the working directory. Those logs contain time stamp
# together with source class and method names.  The file has unlimited length and
# is overwritten at each execution.
java.util.logging.FileHandler.pattern = java.log
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
